{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_BOOK_FAIL, CREATE_BOOK_REQUEST, CREATE_BOOK_SUCCESS, FETCH_BOOK_FAIL, FETCH_BOOK_REQUEST, FETCH_BOOK_SUCCESS, DELETE_BOOK_FAIL, DELETE_BOOK_SUCCESS, DELETE_BOOK_REQUEST, BOOK_DETAIL_SUCCESS, BOOK_DETAIL_FAIL, BOOK_DETAIL_REQUEST, BOOK_UPDATE_SUCCESS, BOOK_UPDATE_REQUEST, BOOK_UPDATE_FAIL } from '../actionTypes'; //Create book\n\nexport const createBook = bookData => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/books', bookData, config);\n      dispatch({\n        type: CREATE_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_BOOK_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n}; //Fetch all books\n\nexport const fetchBooks = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get('/api/books', config);\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOK_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n}; //delete a book\n\nexport const deleteBook = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_BOOK_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`/api/books/${id}`, config);\n      dispatch({\n        type: DELETE_BOOK_SUCCESS,\n        payload: data\n      });\n      dispatch({\n        type: FETCH_BOOK_SUCCESS\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_BOOK_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n}; //Fetch a signle book\n\nexport const fetchBook = (id, bookData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: BOOK_DETAIL_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/books/${id}`, bookData, config);\n      dispatch({\n        type: BOOK_DETAIL_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_DETAIL_FAIL,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n}; //UPDATE BOOK\n\nexport const updateBook = (id, bookData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: BOOK_UPDATE_REQUEST,\n        loading: true\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      const {\n        data\n      } = await axios.put(`/api/books/${id}`, bookData, config);\n      dispatch({\n        type: BOOK_UPDATE_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_UPDATE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message\n      });\n    }\n  };\n};","map":{"version":3,"sources":["/Volumes/KK/book-keeping-app-main/frontend/src/redux/actions/books/bookActions.js"],"names":["axios","CREATE_BOOK_FAIL","CREATE_BOOK_REQUEST","CREATE_BOOK_SUCCESS","FETCH_BOOK_FAIL","FETCH_BOOK_REQUEST","FETCH_BOOK_SUCCESS","DELETE_BOOK_FAIL","DELETE_BOOK_SUCCESS","DELETE_BOOK_REQUEST","BOOK_DETAIL_SUCCESS","BOOK_DETAIL_FAIL","BOOK_DETAIL_REQUEST","BOOK_UPDATE_SUCCESS","BOOK_UPDATE_REQUEST","BOOK_UPDATE_FAIL","createBook","bookData","dispatch","type","loading","config","headers","data","post","payload","error","response","message","fetchBooks","get","deleteBook","id","delete","fetchBook","updateBook","put"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  CREATE_BOOK_FAIL,\n  CREATE_BOOK_REQUEST,\n  CREATE_BOOK_SUCCESS,\n  FETCH_BOOK_FAIL,\n  FETCH_BOOK_REQUEST,\n  FETCH_BOOK_SUCCESS,\n  DELETE_BOOK_FAIL,\n  DELETE_BOOK_SUCCESS,\n  DELETE_BOOK_REQUEST,\n  BOOK_DETAIL_SUCCESS,\n  BOOK_DETAIL_FAIL,\n  BOOK_DETAIL_REQUEST,\n  BOOK_UPDATE_SUCCESS,\n  BOOK_UPDATE_REQUEST,\n  BOOK_UPDATE_FAIL,\n} from '../actionTypes';\n\n//Create book\n\nexport const createBook = bookData => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: CREATE_BOOK_REQUEST,\n        loading: true,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.post('/api/books', bookData, config);\n\n      dispatch({\n        type: CREATE_BOOK_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: CREATE_BOOK_FAIL,\n        error: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n//Fetch all books\n\nexport const fetchBooks = () => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: FETCH_BOOK_REQUEST,\n        loading: true,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.get('/api/books', config);\n\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_BOOK_FAIL,\n        error: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n//delete a book\n\nexport const deleteBook = id => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DELETE_BOOK_REQUEST,\n        loading: true,\n      });\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.delete(`/api/books/${id}`, config);\n      dispatch({\n        type: DELETE_BOOK_SUCCESS,\n        payload: data,\n      });\n\n      dispatch({\n        type: FETCH_BOOK_SUCCESS,\n      });\n    } catch (error) {\n      dispatch({\n        type: DELETE_BOOK_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n//Fetch a signle book\nexport const fetchBook = (id, bookData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: BOOK_DETAIL_REQUEST,\n        loading: true,\n      });\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.get(`/api/books/${id}`, bookData, config);\n\n      dispatch({\n        type: BOOK_DETAIL_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_DETAIL_FAIL,\n        error: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n\n//UPDATE BOOK\n\nexport const updateBook = (id, bookData) => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: BOOK_UPDATE_REQUEST,\n        loading: true,\n      });\n\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      const { data } = await axios.put(`/api/books/${id}`, bookData, config);\n      dispatch({\n        type: BOOK_UPDATE_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: BOOK_UPDATE_FAIL,\n        loading: false,\n        error: error.response && error.response.data.message,\n      });\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}